[{"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\index.tsx":"1","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\App.tsx":"2","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\LoginPage.tsx":"3","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\HomePage.tsx":"4","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\AdminPage.tsx":"5","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\UserPage.tsx":"6","C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\StudentsPage.tsx":"7"},{"size":437,"mtime":1688470862289,"results":"8","hashOfConfig":"9"},{"size":5019,"mtime":1688940815885,"results":"10","hashOfConfig":"9"},{"size":2509,"mtime":1688507574813,"results":"11","hashOfConfig":"9"},{"size":503,"mtime":1688940815886,"results":"12","hashOfConfig":"9"},{"size":13242,"mtime":1688940815885,"results":"13","hashOfConfig":"9"},{"size":2479,"mtime":1688580353211,"results":"14","hashOfConfig":"9"},{"size":3341,"mtime":1688672053143,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16kuh62",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\index.tsx",[],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\App.tsx",["38"],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\LoginPage.tsx",[],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\HomePage.tsx",[],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\AdminPage.tsx",["39"],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\UserPage.tsx",[],[],"C:\\Users\\Kazinagg\\OneDrive\\BSU\\Practika\\Dorm_Manager2\\Dorm_Manager2\\myapp_react\\src\\pages\\StudentsPage.tsx",["40","41"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\n\r\ntype Student = {\r\n  student_id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  birth_date: string;\r\n  gender: string;\r\n  country_name: number;\r\n  // phone: string;\r\n  // email: string;\r\n};\r\n\r\ntype SortConfig = {\r\n  key: keyof Student;\r\n  direction: 'ascending' | 'descending';\r\n};\r\n\r\nconst StudentsPage: React.FC = () => {\r\n  const [sortConfig, setSortConfig] = useState<SortConfig>({ key: 'first_name', direction: 'ascending' });\r\n  const [rows, setRows] = useState<Student[]>([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/data/')\r\n      .then(response => {\r\n        setRows(response.data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sortArray = (type: keyof Student) => {\r\n      const sorted = [...rows].sort((a, b) => {\r\n        if (typeof a[type] === 'number' && typeof b[type] === 'number') {\r\n          return (a[type] as number) - (b[type] as number);\r\n        }\r\n        if (typeof a[type] === 'string' && typeof b[type] === 'string') {\r\n          return (a[type] as string).localeCompare(b[type] as string);\r\n        }\r\n        return 0;\r\n      });\r\n      if (sortConfig.direction === 'descending') sorted.reverse();\r\n      return sorted;\r\n    };\r\n    \r\n\r\n    if (sortConfig.key) {\r\n      const sortedData = sortArray(sortConfig.key);\r\n      setRows(sortedData);\r\n    }\r\n  }, [sortConfig]);\r\n\r\n  const requestSort = (key: keyof Student) => {\r\n    let direction: 'ascending' | 'descending' = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"Login-div\">\r\n        <Link to=\"/login\" className=\"login-button\">Войти</Link>\r\n      </div> */}\r\n      <div className=\"home-page\">\r\n        <h1 className=\"home-page__title\">Добро пожаловать на главную страницу</h1>\r\n        <p className=\"home-page__info\">\r\n          Жители этого общажного ада.\r\n        </p>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th onClick={() => requestSort('first_name')}>Имя</th>\r\n            <th onClick={() => requestSort('last_name')}>Фамилия</th>\r\n            <th onClick={() => requestSort('birth_date')}>День рождения</th>\r\n            {/* <th onClick={() => requestSort('email')}>Email</th> */}\r\n            <th onClick={() => requestSort('gender')}>Пол</th>\r\n            <th onClick={() => requestSort('country_name')}>Страна</th>\r\n            {/* <th onClick={() => requestSort('phone')}>Phone</th> */}\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>{row.first_name}</td>\r\n                <td>{row.last_name}</td>\r\n                <td>{row.birth_date}</td>\r\n                {/* <td>{row.email}</td> */}\r\n                <td>{row.gender}</td>\r\n                <td>{row.country_name}</td>\r\n                {/* <td>{row.phone}</td> */}\r\n\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentsPage;\r\n\r\n\r\n\r\n",{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":156,"column":6,"nodeType":"48","endLine":156,"endColumn":18,"suggestions":"49"},{"ruleId":"42","severity":1,"message":"50","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":54,"column":6,"nodeType":"48","endLine":54,"endColumn":18,"suggestions":"51"},"@typescript-eslint/no-unused-vars","'AnimatePresence' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rows'. Either include it or remove the dependency array.","ArrayExpression",["52"],"'Link' is defined but never used.",["53"],{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},"Update the dependencies array to be: [rows, sortConfig]",{"range":"57","text":"58"},{"range":"59","text":"58"},[4688,4700],"[rows, sortConfig]",[1463,1475]]